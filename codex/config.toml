# Codex Configuration - Optimized
# Personal development workflow with Zed editor preference
# All invalid settings corrected per official documentation

# ============================================================================
# Core Model Settings
# ============================================================================
model = "gpt-5-codex"
model_verbosity = "low"                  # low | medium | high (fixed: was 'concise')

# ============================================================================
# Approval & Sandbox Policies
# ============================================================================
approval_policy = "never"                # untrusted | on-failure | on-request | never
sandbox_mode = "danger-full-access"      # read-only | workspace-write | danger-full-access

# ============================================================================
# Editor Integration
# ============================================================================
file_opener = "vscode"  # vscode | vscode-insiders | cursor | windsurf | none
model_reasoning_effort = "medium"
                        # Note: Set to vscode as fallback (zed not yet supported)

# ============================================================================
# UI & Notifications
# ============================================================================
[tui]
notifications = true  # Enable desktop notifications (iTerm2, Ghostty, WezTerm support)
                      # Or use array: ["agent-turn-complete", "approval-requested"]

# ============================================================================
# Tools & Capabilities
# ============================================================================
[tools]
web_search = true  # Enable web search capability (fixed: was top-level 'search')

# ============================================================================
# MCP Integration (Experimental RMCP Client)
# ============================================================================
experimental_use_rmcp_client = true  # Better MCP support + OAuth for HTTP servers

# Fetch MCP Server - Note: This package doesn't exist in npm yet
# [mcp_servers.fetch]
# command = "npx"
# args = ["-y", "@modelcontextprotocol/server-fetch"]
# enabled = false

# ============================================================================
# Optional MCP Servers (uncomment and configure as needed)
# ============================================================================

# GitHub MCP Server - Enhanced GitHub integration beyond gh CLI
# [mcp_servers.github]
# command = "npx"
# args = ["-y", "@modelcontextprotocol/server-github"]
# env = { GITHUB_TOKEN = "${GITHUB_TOKEN}" }
# enabled = true

# GitLab MCP Server - For work repositories (gitlab.kfplc.com)
# [mcp_servers.gitlab]
# command = "npx"
# args = ["-y", "@modelcontextprotocol/server-gitlab"]
# env = { GITLAB_TOKEN = "${GITLAB_TOKEN}", GITLAB_INSTANCE_URL = "https://gitlab.kfplc.com" }
# enabled = true

# Brave Search MCP Server - Enhanced web search
# [mcp_servers.brave_search]
# command = "npx"
# args = ["-y", "@modelcontextprotocol/server-brave-search"]
# env = { BRAVE_API_KEY = "${BRAVE_API_KEY}" }
# enabled = true

# Filesystem MCP Server - Safe read-only access to specific directories
# [mcp_servers.filesystem_docs]
# command = "npx"
# args = ["-y", "@modelcontextprotocol/server-filesystem", "$HOME/Developer/docs"]
# enabled = true

# ============================================================================
# Trusted Projects
# ============================================================================
[projects."$HOME/Developer/dotfiles"]
trust_level = "trusted"

[projects."$HOME/Developer/kf-ng-web"]
trust_level = "trusted"

[projects."$HOME/Developer"]
trust_level = "trusted"
