#!/bin/sh
# Pre-commit hook to prevent accidental commit of secrets
# This hook scans for common secret patterns before allowing commits
#
# To install: Copy this file to .git/hooks/pre-commit and make it executable
#   cp git/hooks/pre-commit .git/hooks/pre-commit
#   chmod +x .git/hooks/pre-commit
#
# To bypass (use with caution): git commit --no-verify

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Define secret patterns to search for
SECRET_PATTERNS=(
    'sk-[A-Za-z0-9]{20,}'           # OpenAI API keys
    'ghp_[A-Za-z0-9]{36,}'          # GitHub Personal Access Tokens
    'gho_[A-Za-z0-9]{36,}'          # GitHub OAuth tokens
    'ghs_[A-Za-z0-9]{36,}'          # GitHub App tokens
    'AKIA[0-9A-Z]{16}'              # AWS Access Key IDs
    'sk-ant-[A-Za-z0-9-]{20,}'      # Anthropic Claude API keys
    'Bearer [A-Za-z0-9_\-\.=]+'     # Bearer tokens
    'password\s*=\s*["\x27][^"\x27]+["\x27]'  # Password assignments
    'secret\s*=\s*["\x27][^"\x27]+["\x27]'    # Secret assignments
    'api[_-]?key\s*=\s*["\x27][^"\x27]+["\x27]' # API key assignments
    'private[_-]?key["\x27]?\s*:\s*["\x27][^"\x27]+'  # Private keys
)

# Get list of files to be committed
FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$FILES" ]; then
    exit 0
fi

# Flag to track if secrets were found
SECRETS_FOUND=0

# Check each file for secret patterns
for FILE in $FILES; do
    # Skip binary files and common exclusions
    if file "$FILE" 2>/dev/null | grep -q "text"; then
        for PATTERN in "${SECRET_PATTERNS[@]}"; do
            # Search for the pattern in staged changes only
            if git diff --cached "$FILE" | grep -qiE "$PATTERN"; then
                if [ $SECRETS_FOUND -eq 0 ]; then
                    echo "${RED}❌ Potential secrets detected in staged files!${NC}"
                    echo ""
                    SECRETS_FOUND=1
                fi
                echo "${YELLOW}⚠️  File: $FILE${NC}"
                echo "   Pattern: $PATTERN"
                echo ""
            fi
        done
    fi
done

# If secrets were found, block the commit
if [ $SECRETS_FOUND -eq 1 ]; then
    echo "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo "${RED}Commit blocked to prevent secret exposure.${NC}"
    echo ""
    echo "If this is a false positive, you can:"
    echo "  1. Review the detected patterns above"
    echo "  2. Remove actual secrets from the files"
    echo "  3. Use: git commit --no-verify (USE WITH CAUTION)"
    echo ""
    echo "Remember to:"
    echo "  • Store secrets in ~/.env.secrets (git-ignored)"
    echo "  • Use environment variables instead of hardcoded values"
    echo "  • Rotate any exposed secrets immediately"
    echo "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    exit 1
fi

# All checks passed
exit 0